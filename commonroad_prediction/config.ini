[var]
# arrayShape = 19, 19 # uneven dimensions ego in center
arrayShape = 39, 39 # uneven dimensions ego in center
viewLength = 27 
# viewLength = 47 
oneDimension = arrayShape[0]
arraySubcornerLength = viewLength/(float(oneDimension)-1)
toleranceOfDetection = arraySubcornerLength*1 # detection factor should be added between 0.5 and 1.5 mabye

# masterTimesteps = 50 # how many timesteps are simulated in one run
masterTimesteps = 100
# masterTimesteps = 150

velocityArrowScale = 30 # factor determining length of velocity arrows in visualisation
cutOffTimeSteps = 20 # the cutoff is there to ensure that the training output dx dy is a bit shorter than the master timesteps. e.g. 50 (master) - 20 (cutoff) = 30 (training output)

### for visualisation 
buildImagesAndVideo = True # if true, images and video are build from the simulation data
inference = True # if true, it is inference time
predicionVisible = True 
egoVehicleCrID = 30000 # the crID of the ego vehicle that should be visualised (draw sourounding vehicles and their velocities) with pictogram
fps = 10 # frames per second for video
socialInformationSize = 20 # how much potential different vehicles are considered(x,y,dx,dy) around ego vehicle